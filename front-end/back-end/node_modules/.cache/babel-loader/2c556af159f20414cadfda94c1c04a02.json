{"ast":null,"code":"var _jsxFileName = \"/home/user/Escritorio/algorithms-quiz/front-end/src/components/Login.jsx\";\nimport React, { useState } from 'react';\nimport './CSS/Login.css';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setEmail, setIsLoggedIn } from '../redux/actions/userActions'; // import 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Login = ({\n  dispatch,\n  email,\n  isLoggedIn\n}) => {\n  //states hook for testing purpose\n  // let [myEmail, setEmail] = useState('')\n  // const updateEmailTest = (email) => {\n  //     setEmail(myEmail = email);\n  // };\n  let [myPassword, setPassword] = useState('');\n\n  const updatePassword = password => {\n    setPassword(myPassword = password);\n  }; // let[isLoggedIn,setIsLogged] = useState(false)\n\n\n  const verify = () => {\n    const body = {\n      username: email,\n      password: myPassword\n    };\n\n    if (email === 'dannyceron') {\n      dispatch(setIsLoggedIn(true));\n    }\n  };\n\n  const updateEmail = newEmail => {\n    if (newEmail.length < 20) {\n      dispatch(setEmail(newEmail));\n    }\n  };\n\n  if (isLoggedIn) {\n    console.log(\"login test is set to true\");\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }\n    });\n  }\n\n  if (isLoggedIn === false) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 38\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wallpaper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 20\n    }\n  }, \"Algorithms quiz\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Black-tranparent-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"sign-in-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    class: \"form-control\",\n    type: \"text\",\n    placeholder: \"Username\",\n    value: email,\n    onChange: e => updateEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-boxes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    class: \"form-control\",\n    type: \"password\",\n    placeholder: \"Password\" // value={myPassword}\n    ,\n    onChange: e => updatePassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"login-b\",\n    onClick: verify,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/reguister\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }, \"Sign-Up\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }))));\n};\n\nconst mapStateToProps = state => ({\n  email: state.userReducer.email,\n  isLoggedIn: state.userReducer.isLoggedIn\n});\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["/home/user/Escritorio/algorithms-quiz/front-end/src/components/Login.jsx"],"names":["React","useState","Redirect","connect","setEmail","setIsLoggedIn","Login","dispatch","email","isLoggedIn","myPassword","setPassword","updatePassword","password","verify","body","username","updateEmail","newEmail","length","console","log","e","target","value","mapStateToProps","state","userReducer"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './CSS/Login.css'\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\nimport {setEmail,setIsLoggedIn} from '../redux/actions/userActions';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nconst Login = ({dispatch, email,isLoggedIn}) => {\n    //states hook for testing purpose\n    // let [myEmail, setEmail] = useState('')\n    // const updateEmailTest = (email) => {\n    //     setEmail(myEmail = email);\n    // };\n    let [myPassword, setPassword] = useState('');\n    const updatePassword = (password) => {\n        setPassword(myPassword = password);\n    };\n\n    // let[isLoggedIn,setIsLogged] = useState(false)\n\n    const verify = () => {\n        const body = {\n            username: email,\n            password: myPassword,\n        };\n        \n        if(email === 'dannyceron'){\n            dispatch(setIsLoggedIn(true));\n        }\n        \n        \n    };\n    const updateEmail = (newEmail) => {\n        if (newEmail.length < 20) {\n            dispatch(setEmail(newEmail))\n        }\n    };\n\n    if (isLoggedIn) {\n        console.log(\"login test is set to true\");\n        return <Redirect to='/home'/>;\n    }\n    if (isLoggedIn === false){return <Redirect to='/'/>;}\n   \n\n    return (\n       <div className=\"wallpaper\">\n           <div className=\"container\">\n               <div className=\"row\">\n                   <div className=\"col\">\n                   <h1>Algorithms quiz</h1>\n                   </div>\n               </div>\n            <div className=\"row\">\n                <div className=\"col-1\"></div>\n                <div className=\"col\">\n                    <div className=\"Black-tranparent-box\">\n                    <h2 className=\"sign-in-text\">Sign in</h2>\n                        <div className=\"login \">\n                            <div className>\n                                {/* email input */}\n                                <input\n                                    class=\"form-control\"\n                                    type=\"text\"\n                                    placeholder=\"Username\"\n                                    value={email}\n                                    onChange={e => updateEmail(e.target.value)}\n                                />\n                            </div>\n\n                            <div className=\"input-boxes\">\n                                {/* password input */}\n                                <input\n                                    class=\"form-control\"\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                    // value={myPassword}\n                                    onChange={e => updatePassword(e.target.value)}\n                                />\n                            </div>\n                            <div  >\n                                <button className=\"login-b\" \n                                onClick = {verify}>\n                                    Login\n                                </button>\n                                <div  >\n                                <a href=\"/reguister\">Sign-Up</a>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                <div className=\"col-1\"></div>\n            </div>\n        </div>\n       </div>\n    )\n}\nconst mapStateToProps = state =>({\n    email: state.userReducer.email,\n    isLoggedIn: state.userReducer.isLoggedIn,\n});\nexport default connect(mapStateToProps)(Login);"]},"metadata":{},"sourceType":"module"}